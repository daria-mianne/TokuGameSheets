# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
    web:
        build:
            context: ./client
        environment:
            NODE_ENV: production
        ports:
            - 5173:5173
        depends_on:
            server:
                condition: service_started

    server:
        build:
            context: ./server
        environment:
            NODE_ENV: production
        ports:
            - 5000:5000
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: curl --fail http://localhost:5000/api/healthcheck || exit 1
            interval: 10s
            timeout: 5s
            retries: 3

    db:
        image: postgres
        restart: always
        user: postgres
        secrets:
            - db-password
        volumes:
            - db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=tokusheets
            - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
        expose:
            - 5432
        healthcheck:
            test: ['CMD', 'pg_isready']
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    db-data:

secrets:
    db-password:
        file: db/password.txt
